{"version":3,"file":"natty-storage.js","sources":["../src/util.js","../src/env.js","../src/natty-storage.js"],"sourcesContent":["export const hasWindow = 'undefined' !== typeof window\nexport const hasConsole = 'undefined' !== typeof console\nconst NULL = null\nconst toString = Object.prototype.toString\n\n/**\n * 变换两个参数的函数到多个参数\n * @param  {Function} fn 基函数\n * @return {Function} 变换后的函数\n * @demo\n *    function add(x, y) { return x+y; }\n *    add = redo(add);\n *    add(1,2,3) => 6\n */\nconst redo = fn => function() {\n  const args = arguments\n  let ret = fn(args[0], args[1])\n  for (let i = 2, l = args.length; i < l; i++) {\n    ret = fn(ret, args[i])\n  }\n  return ret\n}\n\nconst OBJECT = 'object'\nconst isObject = v => {\n  return typeof v === OBJECT && v !== NULL\n}\n\nconst isWindow = v => {\n  return v !== NULL && v === v.window\n}\n\n// 参考了zepto\nexport const isPlainObject = v => {\n  return v !== NULL && isObject(v) && !isWindow(v) && Object.getPrototypeOf(v) === Object.prototype\n}\n\nconst ARRAY_TYPE = '[object Array]'\nexport const isArray = v => {\n  return toString.call(v) === ARRAY_TYPE\n}\n\n/**\n * 对象扩展\n * @param  {Object} receiver\n * @param  {Object} supplier\n * @return {Object} 扩展后的receiver对象\n * @note 这个extend方法是定制的, 不要拷贝到其他地方用!!!\n */\nlet _extend = (receiver = {}, supplier = {}) => {\n  for (let key in supplier) {\n    // `supplier`中不是未定义的键 都可以执行扩展\n    if (supplier.hasOwnProperty(key) && supplier[key] !== undefined) {\n      if (isArray(supplier[key])) {\n        receiver[key] = [].concat(supplier[key])\n      } else if (isPlainObject(supplier[key])) {\n        receiver[key] = _extend({}, supplier[key])\n      } else {\n        receiver[key] = supplier[key]\n      }\n    }\n  }\n  return receiver\n}\n\nexport const extend = redo(_extend)\n\nexport const noop = function () {}\n\nconst chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678'\nexport const randomString = (n = 32) => {\n  let str = ''\n  for (let i = 0; i < n; i += 1) {\n    str += chars.charAt(Math.floor(Math.random() * chars.length))\n  }\n  return str\n}\n","import {randomString} from './util'\n\nclass ParentEnv {}\n\n// 工厂函数，返回`env`实例对象\n// `env`对象的特点：\n//   - `env`对象一旦创建，它对应的值就不可以再更改\n//   - `env`对象取值的唯一方式是调用`get`方法\nconst factory = (env, hash) => {\n  const random = randomString(6)\n  const hashKey = `_${random}`\n  const envKey = `_${random}:env`\n\n  class Env extends ParentEnv {\n    constructor() {\n      super()\n      this[hashKey] = hash\n      this[envKey] = env\n    }\n\n    get() {\n      return this[hashKey][env] !== undefined ? this[hashKey][env] : undefined\n    }\n  }\n  return new Env()\n}\n\n// 判断是不是`Env`的实例对象，因为`Env`类是由工厂方法动态生成的，所以用`ParentEnv`即可\nexport const isEnv = v => v instanceof ParentEnv\n\n// @param {String} key 环境变量\n// @param {Object} hash 环境变量所有值的映射\n// @demo\n//   env(NODE_ENV, {\n//     development: 'http://0.0.0.0/api',\n//     production: 'http://foo.com/api',\n//   })\nexport const env = (key, hash) => {\n  return factory(key, hash)\n}","import {extend, isPlainObject, noop, hasWindow, hasConsole} from './util'\nimport {env, isEnv} from './env'\n\nconst NULL = null\nconst EMPTY = ''\nconst TRUE = true\nconst FALSE = !TRUE\nconst UNDEFINED = undefined\nconst supportStorage = isSupportStorage()\n\n// 全局默认配置\nconst defaultGlobalConfig = {\n  // localStorage, sessionStorage, variable\n  type: 'variable',\n\n  // 存到浏览器缓存中使用的键\n  key: EMPTY,\n\n  // 版本号\n  tag: EMPTY,\n\n  // 有效期长, 单位ms\n  duration: 0,\n\n  // 有效期至, 时间戳\n  until: 0,\n}\n\nclass Storage {\n  constructor(options = {}) {\n\n    this.config = extend({}, defaultGlobalConfig, options)\n\n    // 必须配置`key`!!! 无论什么类型!!!\n    if (!this.config.key) {\n      throw new Error('`key` is required when creating a storage!')\n    }\n\n    this._storage = (this.config.type !== 'variable' && supportStorage) ?\n      createStorage(this.config.type) : createVariable()\n\n    this._CHECK_KEY = 'NSCheck:' + this.config.key\n    this._DATA_KEY = 'NSData:' + this.config.key\n\n    // 每个`storage`实例对象都是全新的, 只有`storage`实例的数据才可能是缓存的.\n    this._createStamp = +new Date()\n\n    // 数据备份\n    // 每次set新值之前，先备份当前数据，如果set过程中失败了，则恢复该备份数据\n    this._backupData = {}\n\n    // 用于有效性验证的数据\n    this._checkData = this._storage.get(this._CHECK_KEY)\n\n    // 当前`key`的`storage`是否已经存在\n    this._isNew = this._checkData === NULL\n\n    this._fastCache = {}\n  }\n\n  // 惰性初始化 在首次调用`set、get、remove`方法时才执行一次 且只执行一次\n  // @private\n  // @note 为什么要做惰性初始化, 因为当数据大时，可以把读取数据的时间推迟\n  // 到第一次调用`set、get、remove`方法时, 从而可以非常快的创建`storage`实例\n  _lazyInit() {\n\n    // 没有对应的本地缓存 或 本地缓存已过期 则 创建新的`storage`实例\n    if (this._isNew || this.isOutdated()) {\n      // 新的数据内容\n      this._storage.set(this._DATA_KEY, this._data = {})\n    }\n\n    // 如果有对应的本地缓存，则将数据添加到`this._data`上\n    else {\n      this._data = this._storage.get(this._DATA_KEY)\n      if (this._data === NULL) {\n        this._storage.set(this._DATA_KEY, this._data = {})\n      }\n    }\n\n    // 更新验证条件，用于下次检查有效性\n    // 只有真正调用了实例方法，才会更新验证数据。\n    // 这样可以在`nattyStorage.clean`方法中，将那些仅实例化但不使用的缓存实例清理掉。\n    this._storage.set(this._CHECK_KEY, this._checkData = {\n      key: this.config.key,\n      tag: this.config.tag,\n      lastUpdate: this._createStamp,\n      duration: this.config.duration,\n      until: this.config.until,\n    })\n  }\n\n  // 判断当前`key`的`storage`是否已经过期\n  // @returns {boolean}\n  isOutdated() {\n    if (this.config.tag && this.config.tag !== this._checkData.tag) {\n      return TRUE\n    }\n\n    const now = +new Date()\n    // 注意要使用`_checkData`的`duration`验证, 而不是用`config`的`duration`验证!!\n    if (this._checkData.duration && now - this._checkData.lastUpdate > this._checkData.duration) {\n      return TRUE\n    }\n\n    if (this._checkData.until && now > this._checkData.until) {\n      return TRUE\n    }\n\n    return FALSE\n  }\n\n  // 把指定的`plain object`对象设置为`storage`的值\n  data(data) {\n    if (!this._data) {\n      this._lazyInit()\n    }\n\n    if (!isPlainObject(data)) {\n      throw new Error(`The argument for data() must be a plain object. Invalid: ${data}`)\n    }\n\n    // 整体设置，置空缓存\n    this._fastCache = {}\n\n    // step1: 备份数据\n    this._backupData = this._data\n\n    try {\n      // step2: 更新`this._data`\n      this._data = data\n\n      // step3: 将`this._data`存储到`storage`中\n      this._storage.set(this._DATA_KEY, this._data)\n    } catch (e) {\n      // 如果存储失败了，恢复原有数据\n      // 保持`this._data`和`storage`中的值同步，是最基本的功能\n      this._storage.set(this._DATA_KEY, this._data = this._backupData)\n\n      throw new Error(e)\n    }\n  }\n\n  // 同步设置数据\n  // @param path {String} optional 要设置的值的路径 或 要设置的完整值\n  // @param value {Any} 要设置的值\n  set(path, data) {\n    if (!this._data) {\n      this._lazyInit()\n    }\n\n    // `env`只能用于`type`为`variable`的场景\n    if (this.config.type !== 'variable' && isEnv(data)) {\n      throw new Error(`'env' value can NOT be used for 'type: ${this.config.type}'`)\n    }\n\n    if (typeof path !== 'string') {\n      throw new Error(`The first argument for set() must be a string. Invalid: ${path}`)\n    }\n\n    // 值有变，删除快速缓存\n    delete this._fastCache[path]\n\n    // step1: 备份数据\n    this._backupData = this._data\n\n    try {\n      // step2: 更新`this._data`\n      // 注意 `setValueByPath`方法是有抛错场景的 比如给字符串值又添加了新的属性\n      setValueByPath(path, data, this._data)\n\n      // step3: 将`this._data`存储到`storage`中\n      this._storage.set(this._DATA_KEY, this._data)\n    } catch (e) {\n      // 如果存储失败了，恢复原有数据\n      // 保持`this._data`和`storage`中的值同步，是最基本的功能\n      this._storage.set(this._DATA_KEY, this._data = this._backupData)\n\n      throw new Error(e)\n    }\n  }\n\n  // 获取指定的路径的数据\n  // @param path {String} optional 要获取的值的路径 如果不传 则返回整体值\n  // @returns {Any}\n  // instance.get()\n  // instance.get('foo')\n  // instance.get('foo.bar')\n  get(path, fallbackValue) {\n    if (!this._data) {\n      this._lazyInit()\n    }\n\n    // 如果有快速缓存 则返回缓存的值\n    if (this._fastCache.hasOwnProperty(path)) {\n      return this._fastCache[path]\n    }\n\n    let data\n\n    try {\n      if (path) {\n        data = getValueByPath(path, this._data)\n      } else {\n        data = this._data\n      }\n    } catch (e) {\n      throw new Error(e)\n    }\n\n    data = data !== UNDEFINED ? data : fallbackValue\n\n    // 记录快速缓存\n    this._fastCache[path] = data\n\n    return data\n  }\n\n  // 如果取到的值是`undefined`，会抛出错误\n  sure(path) {\n    const value = this.get(path)\n    if (value === UNDEFINED) {\n      throw new Error(`Unexpected undefined value returned by path '${path}'`)\n    }\n    return value\n  }\n\n  // 返回指定的路径是否有值\n  // @param path {String} optional 要查询的路径\n  has(path) {\n    if (!this._data) {\n      this._lazyInit()\n    }\n\n    if (!path) {\n      throw new Error('a `key|path` argument should be passed into the `has` method')\n    }\n\n    return hasValueByPath(path, this._data) ? {\n      has: TRUE,\n      value: getValueByPath(path, this._data),\n    } : {\n      has: FALSE,\n      value: UNDEFINED,\n    }\n  }\n\n  // 删除指定的路径的数据, 包括键本身\n  // @param path {String} optional 要获取的值的路径 如果不传 则返回整体值\n  remove(path) {\n    if (!this._data) {\n      this._lazyInit()\n    }\n\n    // step1: 备份数据\n    this._backupData = this._data\n\n    // step2: 更新`this._data`\n    if (path) {\n      // 如果有`path` 删除对应的键值对\n      removeKeyAndValueByPath(path, this._data)\n    } else {\n      // 删除所有数据, 即复原到初始空对象\n      this._data = {}\n    }\n\n    // step3: 将`this._data`存储到`storage`中\n    try {\n      this._storage.set(this._DATA_KEY, this._data)\n    } catch (e) {\n      // 如果存储失败了，恢复原有数据\n      // 保持`this._data`和`storage`中的值同步，是最基本的功能\n      this._storage.set(this._DATA_KEY, this._data = this._backupData)\n      throw new Error(e)\n    }\n  }\n\n  // 销毁当前`storage`实例\n  destroy() {\n    this._data = NULL\n    this._checkData = NULL\n    this._fastCache = NULL\n    this._storage.remove(this._DATA_KEY)\n    this._storage.remove(this._CHECK_KEY)\n    for (let prop in this.constructor.prototype) {\n      if (this.constructor.prototype.hasOwnProperty(prop)) {\n        this[prop] = UNDEFINED\n      }\n    }\n  }\n\n  dump() {\n    if (!this._data) {\n      this._lazyInit()\n    }\n\n    if (JSON && hasConsole) {\n      console.log(JSON.stringify(this._data, NULL, 4))\n    }\n  }\n}\n\n// 添加异步方法：asyncSet asyncGet asyncHas asyncRemove asyncDestroy\nconst methodHasAsyncMode = ['set', 'get', 'has', 'remove', 'destroy']\nfor (let i=0, l=methodHasAsyncMode.length; i<l; i++) {\n  let method = methodHasAsyncMode[i]\n  Storage.prototype['async' + method.charAt(0).toUpperCase() + method.substr(1)] = function () {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(this[method].apply(this, arguments))\n      } catch(e) {\n        reject(e)\n      }\n    })\n  }\n}\n\nfunction createStorage(storage) {\n  //  不用担心这个window, 这个函数能调用, 说明已经是在浏览器端了\n  storage = window[storage]\n  // storage = storage === 'localStorage' ? localStorage : sessionStorage\n  return {\n    // NOTE  值为undefined的情况, JSON.stringify方法会将键删除\n    // JSON.stringify({x:undefined}) === \"{}\"\n    set: function (key, value) {\n      storage.setItem(key, JSON.stringify(value))\n    },\n    get: function (key) {\n      let value = storage.getItem(key)\n      // alert(localStorage[key])\n      if (!value) return NULL\n      try {\n        value = JSON.parse(value)\n      } catch (e) {\n        hasConsole && console.log(e)\n      }\n      return value\n    },\n    remove: function (key) {\n      storage.removeItem(key)\n    },\n  }\n}\n\nlet variable = {}\nfunction createVariable() {\n  let storage = variable\n  return {\n    set: function (key, value) {\n      storage[key] = value\n    },\n    get: function (key) {\n      // 当对应的键不存在时, 返回值保持和`storage`一致。\n      if (!(key in storage)) {\n        return NULL\n      }\n      return storage[key]\n    },\n    remove: function (key) {\n      delete storage[key]\n    },\n  }\n}\n\nfunction reserveString (str) {\n  return str.split(EMPTY).reverse().join(EMPTY)\n}\n\nfunction splitPathToKeys (path) {\n  let ret\n  if (path.indexOf('\\\\.') === -1) {\n    ret = path.split('.')\n  } else {\n    ret = reserveString(path).split(/\\.(?!\\\\)/).reverse()\n    for (let i=0, l=ret.length; i<l; i++) {\n      ret[i] = reserveString(ret[i].replace(/\\.\\\\/g, '.'))\n    }\n  }\n  return ret\n}\n\n// 注意 该方法是有抛错场景的\nfunction setValueByPath(path, value, data) {\n  let keys = splitPathToKeys(path)\n  let bottomData = data\n  while (keys.length) {\n    let key = keys.shift()\n    if (keys.length) {\n      bottomData[key] = bottomData[key] || {}\n      bottomData = bottomData[key]\n    } else {\n      if (isPlainObject(bottomData)) {\n        bottomData[key] = value\n      } else {\n        const nonPlainObjectPath = path.replace(new RegExp('\\\\.' + key + '$'), '')\n        /* eslint-disable */\n        throw new Error(`Cannot create property '${key}' on '${nonPlainObjectPath}'(non-plain-object) node: ${isEnv(bottomData) ? bottomData.get() : bottomData}`)\n        /* eslint-enable */\n      }\n    }\n  }\n  return data\n}\n\n// 对`path`进行递归取值\nfunction getValueByPath(path, data, isKey) {\n  isKey = isKey || false\n  if (isKey === true || path.indexOf('.') === -1) {\n    // 如果是`env`对象，则根据环境变量取值，否则直接返回\n    return isEnv(data[path]) ? data[path].get() : data[path]\n  } else {\n    let keys = splitPathToKeys(path)\n\n    while(keys.length) {\n      let key = keys.shift()\n      data = getValueByPath(key, data, true)\n\n      if (typeof data !== 'object' || data === UNDEFINED) {\n        if (keys.length) data = UNDEFINED\n        break\n      }\n    }\n    return data\n  }\n}\n\n// @return {Boolean}\nfunction hasValueByPath(path, data, isKey) {\n  // 首次调用, 如果没有`.`, 就是key的含义\n  isKey = isKey || path.indexOf('.') === -1\n  if (isKey) {\n    return data.hasOwnProperty(path)\n  } else {\n    let keys = splitPathToKeys(path)\n    while(keys.length) {\n      let key = keys.shift()\n      let hasKey = data.hasOwnProperty(key)\n      if (hasKey && keys.length) {\n        data = getValueByPath(key, data, true)\n        if (!isPlainObject(data)) {\n          return FALSE\n        }\n      } else {\n        return hasKey\n      }\n    }\n  }\n}\n\nfunction removeKeyAndValueByPath(path, data) {\n  let keys = splitPathToKeys(path)\n  let bottomData = data\n  while (keys.length) {\n    let key = keys.shift()\n    if (keys.length) {\n      bottomData[key] = bottomData[key] || {}\n      bottomData = bottomData[key]\n    } else {\n      delete bottomData[key]\n    }\n  }\n  return data\n}\n\nfunction isSupportStorage() {\n  if (!hasWindow) {\n    return FALSE\n  }\n\n  if (typeof localStorage !== 'object') {\n    return FALSE\n  }\n\n  // 执行到这里，说明存在`storage`对象, 但, 有了也不一定能用!!! 比如隐身模式, 所以需要进一步验证\n  // `Safari`在隐身模式下会触发错误\n  let support = TRUE\n  try {\n    const a = '__nstest__'\n    localStorage.setItem(a, a)\n    support = localStorage.getItem(a) === a\n    localStorage.removeItem(a)\n  } catch (e) {\n    support = FALSE\n  }\n  return support\n}\n\nconst nattyStorage = options => {\n  return new Storage(options)\n}\n\nnattyStorage.version = '__VERSION__'\nnattyStorage._variable = variable\nnattyStorage.supportStorage = supportStorage\n\nnattyStorage.each = function (fn = noop) {\n  const map = {\n    variable: nattyStorage._variable,\n  }\n\n  if (supportStorage) {\n    map.localStorage = localStorage\n    map.sessionStorage = sessionStorage\n  }\n\n  for (let type in map) {\n    for (let key in map[type]) {\n      if (map[type].hasOwnProperty(key) && key.indexOf('NSCheck:') > -1) {\n        let storage = nattyStorage({\n          key: key.match(/NSCheck:(.*)/)[1],\n          type: type,\n        })\n        fn(storage)\n      }\n    }\n  }\n}\n\n// 清理localStorage中过期的缓存\nnattyStorage.clean = function () {\n  this.each(storage => {\n    if (storage.isOutdated()) {\n      storage.destroy()\n    }\n  })\n}\n\nnattyStorage.list = function () {\n  this.each(storage => {\n    hasConsole && console.log(storage.config.type, storage.config.key, storage.get())\n  })\n}\n\n// 内置处理一次过期数据\nnattyStorage.clean()\n\nnattyStorage.env = env\n\nexport default nattyStorage"],"names":["const","NULL","let","super","data","this","arguments","i","l"],"mappings":"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"}